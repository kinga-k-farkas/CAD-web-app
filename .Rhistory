return(day_label)
}
df$daily_labels <- day_label_maker(df$test_date)
#returning the resulting data frame df
return(df)
}
df <- read.csv("thruput_asn4EgyptSept2009Dec2011.csv")
names(df)
df <- dataConverter4thruput(df)
df$date <-format(as.POSIXlt(df$test_date), "%m %d %Y")
df$test_date <- as.character(df$test_date)
df$date <- as.character(df$test_date)
names(df)
by_day <- group_by(df, date)
daily_thruPut <- summarise(by_day, tests=n(), meanThruPut=mean(download_Mbps),
medianThruPut = median(download_Mbps),
varThruPut=var(download_Mbps))
head(daily_thruPut)
daily_thruPut <- arrange(daily_thruPut, date)
#adding an index column
daily_thruPut$day <- c(1:nrow(daily_thruPut))
daily_thruPut$medianKbps <- daily_thruPut$medianThruPut*1000
daily_tickmarks <- c(daily_thruPut$date[1], daily_thruPut$date[200],
daily_thruPut$date[400], daily_thruPut$date[600], daily_thruPut$date[800])
daily_tickmarks
ggplot() +
geom_line(data = daily_thruPut, aes(x = day, y = medianKbps,
color = "Median of  Throughput  in Kbps")) +
geom_line(data = daily_thruPut, aes(x = day, y = tests, color = "Tests per day"))  +
xlab('Date') +
ylab('')+
labs(title="Daily Median of Throughput in Kbps & Number of Tests per Day in Egypt")+
scale_x_continuous(labels=daily_tickmarks)
x<-daily_thruPut$medianKbps
y<-daily_thruPut$tests
ccf(x,y)
?function
?function
22/3
22//3
22%3
22 %/% 3
22 %% 3
require(LambertW)
?test_normality
str(test_normality())
x <- rnorm(n = 1000)
test_normality(x)
str(test_normality(x))
?kurtosis
kurtosis(x)
skewness(x)
shapiro.test(x)
str(shapiro.test)
str(shapiro.test(x))
source('~/Dropbox/outreachy/normality_finder_function.R', echo=TRUE)
normaility_finder(x)
normality_finder(x)
source('~/Dropbox/outreachy/normality_finder_function.R', echo=TRUE)
normality_finder(x)
?abs
abs(normality_finder(x)$skew)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
y=runif(30)
y
?runif
x <- rnorm(50)
x
?rnorm
dnorm(0)
?dnorm
require(graphics)
dnorm(0) == 1/sqrt(2*pi)
dnorm(1) == exp(-1/2)/sqrt(2*pi)
dnorm(1) == 1/sqrt(2*pi*exp(1))
pnorm(1)
plot(function(x) dnorm(x, log = TRUE), -60, 50,
main = "log { Normal density }")
curve(log(pnorm(x)), add = TRUE, col = "red", lwd = 2)
rnorm(20,2,0)
rnorm(10, mean=3.4, sd=0.001)
x<-rnorm(10, mean=4, sd=3.4)
pnorm(x)
dnorm(x, mean=4, sd=3.4)
pnorm(4, mean=4, sd=3)
setwd("~/Dropbox/outreachy/InterconnectionStudy2014/interconnection-study-2014-telescope-data-amended-2015-04-23-raw")
library(qcc)
library(dplyr)
library(moments) #contains kurtosis(), skewness()
library(LambertW) #contains test_normality()
orig_df <- read.csv("2014-01-01-000000+273d_nuq01_cablevision_download_throughput-raw.csv")
orig_df <- read.csv("2014-01-01-000000+273d_lax01_verizon_download_throughput-raw.csv")
head(orig_df)
names(orig_df)<-c("log_time", "download_thruput")
orig_df$date <-  as.POSIXlt(as.integer(orig_df$log_time),origin = "1970-01-01", tz = "GMT")
head(orig_df)
orig_df$yearMoDay <- as.character(format(orig_df$date, "%Y %m %d"))
orig_df$date<-as.character(orig_df$date)
head(orig_df)
plot(orig_df$download_thruput, type="l")
daily_df <- group_by(orig_df, yearMoDay)
daily_df_summary <- summarise(daily_df, count=n(),
median_thruput=median(download_thruput))
test_data <- daily_df_summary$median_thruput
plot(test_data,type="l", main="Download Throughput LAX 2014 Verizon", xlab="Days",
ylab="Download Throughput")
trainer <- test_data[175:272]
xbar<-mean(trainer)
sigma <- sd(trainer)
x<-rnorm(272-15)
272-175
x<-rnorm(100, mean=xbar, sd=sigma)
head(x)
ks.test(trainer, x)
shapiro.test(trainer)
x<-rnorm(100, mean=xbar, sd=sigma)
ks.test(trainer, x)
x<-rnorm(100, mean=xbar, sd=sigma)
ks.test(trainer, x)
library(qcc)
x
cusum(x,sizes=1, center=xbar, std.dev=sigma )
what<-cusum(x,sizes=1, center=xbar, std.dev=sigma )
what$violations
trainer
what<-cusum(trainer,sizes=1, center=xbar, std.dev=sigma )
what$violations
what$violations$lower
test
what<-cusum(test_data,sizes=1, center=xbar, std.dev=sigma )
what$violations$lower
what$violations$upper
length(test_data)
str(what)
attr(what)
?attr
?sd
?list
source('~/.active-rstudio-document', echo=TRUE)
d_list
source('~/.active-rstudio-document', echo=TRUE)
require("parameter_finder_function.R")
require("parameter_finder_function.R")
setwd("~/Dropbox/outreachy")
require("parameter_finder_function.R")
source('~/Dropbox/outreachy/TryingThings.R', echo=TRUE)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
logical(0)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
k
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
str(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=5, sd=3)
x<-c(a,b)
parameter_finder(x)
source("parameter_finder_function.R")
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=5, sd=3)
x<-c(a,b)
parameter_finder(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=10, sd=3)
x<-c(a,b)
parameter_finder(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=100, sd=30)
x<-c(a,b)
parameter_finder(x)
shapiro.test(x)
library(LambertW)
test_normality(x)
y<-parameter_finder(x)
y<-parameter_finder(x)
y$k
y$H
rep(10000000,8)
c(-1, rep(1000000,7))
source('~/Dropbox/outreachy/checker_function.R', echo=TRUE)
source('~/Dropbox/outreachy/parameter_finder_function.R', echo=TRUE)
source('~/Dropbox/outreachy/checker_function.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source("training_data_finder_function.R")
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
y<-test_normality(x)
training_data_finder(x)
training_data_finder(x)
trainer <- training_data_finder(x)
test_normality(trainer[[2]])
trainer[[1]]
test_normality(x)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer <- training_data_finder(x)
trainer[[1]]
x_bar<-mean(trainer[[2]])
library(qcc)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
source("training_data_finder_function.R")
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
str(trainer[[1]])
length(x)
170 %/% 3
65+56
170-56+1
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
x_bar<-mean(trainer[[2]])
sigma<-sd(trainer[[2]])
H<-trainer$H
k<-trainer$k
cusum(x,sizes=1, center=x_bar, std.dev=sigma,
decision.interval=H, se.shift=k)
library(qcc)
?cusum
require(LambertW)
?test_normality
load.packages("nortest")
install.packages("nortest")
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
qqnorm(y)
qqline(y,col=2)
?qqnorm
?acf
par()
?cusum
library(qcc)
?cusum
library(ggplot2)
?ggplot
length(c(NA,NA,NA,10))
setwd("~/Desktop/outreachy/myExample2")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?Sys.sleep
?incProgress()
runApp()
runApp()
runApp()
runApp()
runApp()
?length
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
as.character()
as.character(NULL)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
source("wtf.R")
wtf(c(11, 3, 35, 22, 11))
source("wtf.R")
wtf(c(11, 3, 35, 22, 11))
source("wtf.R")
wtf(c(11, 3, 35, 22, 11))
source("wtf.R")
wtf(c(5, 3, 35, 22, 11))
source("wtf.R")
wtf(c(5, 3, 35, 22, 11))
source("wtf.R")
wtf(c(5, 3, 35, 22, 11))
wtf(c(5, 3, 5, 22, 11))
wtf(c(5, 8, 5, 22, 11))
source("cad_function.R")
v<-rep(11, 300)
v
cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
source("cad_function.R")
v<-rep(11, 300)
cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
source("cad_function.R")
v<-rep(11, 300)
cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
runApp()
runApp()
runApp()
runApp()
?invalidateLater
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(shinyapps)
deployApp(appName = "CAD_beta_version")
?deployApp
library(rsconnect)
deployApp(appName = "CAD_beta_version")
runApp()
runApp()
runApp()
runApp()
deployApp(appName = "CAD_beta_version")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dummy<-read.csv("syntheticValues_df.csv")
head(dummy)
nrow(dummy)
plot(dummy[,1])
plot(dummy[,1], type="l")
rnorm(200, mean=50, sd=9)
v<-c(dummy[,1],rnorm(200, mean=50, sd=9), rnorm(60, mean=33, sd=1), rnorm(200, mean=40, sd=5) )
plot(v, type="l")
dummy[,1]<-v
dummy<-data.frame(synthetic_vals=v)
head(dummy)
nrow(dummy)
write.csv(dummy, "synth_val_df_701.csv", row.names = FALSE)
runApp()
dummy<-read.csv("syntheticValues_df.csv")
head(dummy)
nrow(dummy)
plot(dummy[,1], type="l")
rnorm(200, mean=50, sd=9)
v<-c(dummy[,1],rnorm(200, mean=50, sd=1), rnorm(60, mean=33, sd=1), rnorm(200, mean=50, sd=5) )
plot(v, type="l")
dummy<-data.frame(synthetic_vals=v)
head(dummy)
write.csv(dummy, "synth_val_df_701.csv", row.names = FALSE)
runApp()
runApp()
runApp()
1/3
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
substr("abcdef", 2, 4)
runApp()
runApp()
source("cad_function.R")
da_data<-read.csv("Nile.csv")
View(da_data)
v<-da_data[,2]
cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
x<-cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
source("cad_function.R")
x<-cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
str(x)
source("result_plotter_function_generic.R")
result_plotter(x[[1]],x[[2]], "main_title")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
str(x)
result_plotter(x[[1]],x[[2]], "main_title")
source("cad_function.R")
source("result_plotter_function_generic.R")
main_title="The Time Series with Anomalies in Red")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
source("cad_function.R")
source("result_plotter_function_generic.R")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
str(x)
source("cad_function.R")
source("result_plotter_function_generic.R")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
str(x)
x$training_info[[1]]
result_plotter(x[[1]],x[[2]], "main_title")
x$no_solution
x<-cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
str(x)
result_plotter(x[[1]],x[[2]], "main_title")
x$training_info[[1]]
train_upper<-x$training_info
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
train_lower<-x$training_info
train_lower[[1]]
train_lower[[1]] == train_upper[[1]]
sum(train_upper!=train_lower)
length(train_lower)
length(train_upper)
for (i in 1: length(train_lower)){
print(sum(train_upper[i]!=train_lower[i]))
}
for (i in 1: length(train_lower)){
print(sum(train_upper[[i]]!=train_lower[[i]]))
}
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
x<-cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
x<-cad(v, year=2012,mo=01,day=01,type="upper",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
source("cad_function.R")
source("result_plotter_function_generic.R")
x<-cad(v, year=2012,mo=01,day=01,type="lower",delta=3, lambda=5,
main_title="The Time Series with Anomalies in Red")
runApp()
runApp()
deployApp(appName = "CAD_Version1.1")
deployApp(appName = "CAD_Version1_1")
runApp()
runApp()
deployApp(appName = "CAD_Version1_1")
