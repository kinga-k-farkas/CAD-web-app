head(df)
df$date <-format(as.POSIXlt(df$test_date), "%m %d %Y")
df$test_date <- as.character(df$test_date)
df$date <- as.character(df$date)
by_day <- group_by(df, date)
daily_thruPut <- summarise(by_day, tests=n(), meanThruPut=mean(download_Mbps),
medianThruPut = median(download_Mbps),
varThruPut=var(download_Mbps))
head(daily_thruPut)
#ordering the data frame by date
daily_thruPut <- arrange(daily_thruPut, date)
tail(daily_thruPut)
df$date <- as.character(df$test_date)
head(df)
by_day <- group_by(df, date)
daily_thruPut <- summarise(by_day, tests=n(), meanThruPut=mean(download_Mbps),
medianThruPut = median(download_Mbps),
varThruPut=var(download_Mbps))
head(daily_thruPut)
daily_thruPut <- arrange(daily_thruPut, date)
tail(daily_thruPut)
daily_thruPut$medianKbps <- daily_thruPut$medianThruPut*1000
daily_tickmarks <- c(daily_thruPut$date[1], daily_thruPut$date[200],
daily_thruPut$date[400], daily_thruPut$date[600], daily_thruPut$date[800])
plot(daily_thruPut$day,daily_thruPut$medianThruPut, type="l")
ggplot(daily_thruPut, aes(x=day, y=medianKbps), color=variable) +
geom_line(color="red")+
geom_line(data = daily_thruPut, aes(x = day, y = tests), color="blue")+
labs(list(title="Daily Median of Throughput for Egypt", x="Date",
y="Daily Median of Throughput - Mbps")) +
scale_x_continuous(labels=daily_tickmarks)
ggplot(daily_thruPut, aes(x=day, y=medianKbps), color=variable) +
geom_line(color="red")+
geom_line(data = daily_thruPut, aes(x = day, y = tests), color="blue")+
labs(list(title="Daily Median of Throughput for Egypt", x="Date",
y="Daily Median of Throughput - Mbps")) +
scale_x_continuous(labels=daily_tickmarks)
daily_thruPut$medianKbps <- daily_thruPut$medianThruPut*1000
ggplot(daily_thruPut, aes(x=day, y=medianKbps), color=variable) +
geom_line(color="red")+
geom_line(data = daily_thruPut, aes(x = day, y = tests), color="blue")+
labs(list(title="Daily Median of Throughput for Egypt", x="Date",
y="Daily Median of Throughput - Mbps")) +
scale_x_continuous(labels=daily_tickmarks)
daily_thruPut$day <- c(1:nrow(daily_thruPut))
ggplot(daily_thruPut, aes(x=day, y=medianKbps), color=variable) +
geom_line(color="red")+
geom_line(data = daily_thruPut, aes(x = day, y = tests), color="blue")+
labs(list(title="Daily Median of Throughput for Egypt", x="Date",
y="Daily Median of Throughput - Mbps")) +
scale_x_continuous(labels=daily_tickmarks)
by_asn_date <- group_by(df, ASN, date)
daily_by_asn <- summarise(by_asn_date, tests=n(), mean=mean(download_Mbps),
median = median(download_Mbps),
var=var(download_Mbps))
head(daily_by_asn)
daily_by_asn$ASN <- as.character(daily_by_asn$ASN)
daily_by_asn <- arrange(daily_by_asn,ASN,date)
daily_by_asn$day <- match(daily_by_asn$date, daily_thruPut$date)
daily_by_asn$day
ggplot(daily_by_asn, aes(x=day,y=median, color=variable))+
geom_line(aes(y=median, col=ASN))+
scale_x_continuous(labels=daily_tickmarks)+
facet_wrap(~ASN)
group_sizes<-group_size(daily_by_asn)
Egypt_ASNs<-sort(unique(daily_by_asn$ASN))
nrow(filter(daily_by_asn, ASN == "33778"))
filterer <- group_sizes > 40
filtered_daily_by_asn<-filter(daily_by_asn, ASN %in% Egypt_ASNs[filterer])
group_size(filtered_daily_by_asn)
#plotting
adj_daily_tickmarks <- c("12/26/09","10/10/10", "10/19/11")
asn_descriptors <- list("AS15475"="Nile Online", "AS15804"="The Way Out Int. Sol.",
"AS20484"= "Yalla Online", "AS20928"= "Noor Adv. Tech.",
"AS24835"= "Vodafone Data Egypt",
"AS24863"="APNIC", "AS25576"= "AFMIC Auton. Syst.",
"AS2561" = "Egyptian Univ. Network", "AS31619" = "City Stars Egypt",
"AS33782"="Bibliotheca Alexandrina" , "AS33785"="City Net Telecom",
"AS36935" = "Vodafone Egypt Telecom.", "AS36992"= "Etisalat MISR",
"AS37069"= "Mobinil",   "AS6879"="Egyptian Nat. Sci.& Tech. Inf. Network",
"AS8452" = "TE-AS" ,  "AS8524"="AUCEGYPT" )
ggplot(filtered_daily_by_asn, aes(x=day,y=median, color=ASN))+
geom_line(aes(y=median, col=ASN))+
scale_x_continuous(labels=adj_daily_tickmarks, breaks=c(100,388,760))+
xlab('Days') +
ylab('Median of Throughput - Mbps')+
labs(title="Median of Daily Throughput in Mbps \n Grouped by ASN")+
facet_wrap(~ASN_desc, ncol=3)
describer <- function(asn){
ggplot(filtered_daily_by_asn, aes(x=day,y=median, color=ASN))+
geom_line(aes(y=median, col=ASN))+
scale_x_continuous(labels=adj_daily_tickmarks, breaks=c(100,388,760))+
xlab('Days') +
ylab('Median of Throughput - Mbps')+
labs(title="Median of Daily Throughput in Mbps \n Grouped by ASN")+
facet_wrap(~ASN_desc, ncol=3)
ggplot(filtered_daily_by_asn, aes(x=day,y=median, color=ASN))+
geom_line(aes(y=median, col=ASN))+
scale_x_continuous(labels=adj_daily_tickmarks, breaks=c(100,388,760))+
xlab('Days') +
ylab('Median of Throughput - Mbps')+
labs(title="Median of Daily Throughput in Mbps \n Grouped by ASN")+
facet_wrap(~ASN_desc, ncol=3)
describer <- function(asn){
return(asn_descriptors[[asn]])
}
filtered_daily_by_asn$ASN_desc <- sapply(filtered_daily_by_asn$ASN, describer)
head(filtered_daily_by_asn)
ggplot(filtered_daily_by_asn, aes(x=day,y=median, color=ASN))+
geom_line(aes(y=median, col=ASN))+
scale_x_continuous(labels=adj_daily_tickmarks, breaks=c(100,388,760))+
xlab('Days') +
ylab('Median of Throughput - Mbps')+
labs(title="Median of Daily Throughput in Mbps \n Grouped by ASN")+
facet_wrap(~ASN_desc, ncol=3)
asn_descriptors <- list("AS15475"="Nile Online", "AS15804"="The Way Out Int. Sol.",
"AS20484"= "Yalla Online", "AS20928"= "Noor Adv. Tech.",
"AS24835"= "Vodafone Data Egypt",
"AS24863"="APNIC", "AS25576"= "AFMIC Auton. Syst.",
"AS2561" = "Egyptian Univ. Network", "AS31619" = "City Stars Egypt",
"AS33782"="Bibliotheca Alexandrina" , "AS33785"="City Net Telecom",
"AS36935" = "Vodafone Egypt Telecom.", "AS36992"= "Etisalat MISR",
"AS37069"= "Mobinil",   "AS6879"="Egyptian Nat. Sci.& Tech. Inf. Network",
"AS8452" = "TE-AS" ,  "AS8524"="AUCEGYPT" )
describer <- function(asn){
return(asn_descriptors[[asn]])
}
filtered_daily_by_asn$ASN_desc <- sapply(filtered_daily_by_asn$ASN, describer)
head(filtered_daily_by_asn)
filtered_daily_by_asn$ASN <-
gsub(" ", "", paste("AS",filtered_daily_by_asn$ASN), fixed = TRUE)
describer("15475")
filtered_daily_by_asn$ASN <-
gsub(" ", "", paste("AS",filtered_daily_by_asn$ASN), fixed = TRUE)
filtered_daily_by_asn
filtered_daily_by_asn$ASN_desc <- sapply(filtered_daily_by_asn$ASN, describer)
head(filtered_daily_by_asn)
setwd("~/Dropbox/outreachy")
library(dplyr)
library(ggplot2)
df <- read.csv("thruput_asn4EgyptSept2009Dec2011.csv")
names(df)
head(df$date)
head(df$test_date)
setwd("~/Dropbox/outreachy")
by_day <- group_by(df, date)
daily_thruPut <- summarise(by_day, tests=n(), meanThruPut=mean(download_Mbps),
medianThruPut = median(download_Mbps),
varThruPut=var(download_Mbps))
head(daily_thruPut)
#ordering the data frame by date
daily_thruPut <- arrange(daily_thruPut, date)
#adding an index column
daily_thruPut$day <- c(1:nrow(daily_thruPut))
```
daily_thruPut$day <- c(1:nrow(daily_thruPut))
daily_thruPut$medianKbps <- daily_thruPut$medianThruPut*1000
daily_tickmarks <- c(daily_thruPut$date[1], daily_thruPut$date[200],
daily_thruPut$date[400], daily_thruPut$date[600], daily_thruPut$date[800])
ggplot() +
geom_line(data = daily_thruPut, aes(x = day, y = medianKbps,
color = "Median of  Throughput  in Kbps")) +
geom_line(data = daily_thruPut, aes(x = day, y = tests, color = "Tests per day"))  +
xlab('Date') +
ylab('')+
labs(title="Daily Median of Throughput in Kbps & Number of Tests per Day in Egypt")+
scale_x_continuous(labels=daily_tickmarks)
daily_tickmarks <- c(daily_thruPut$date[1], daily_thruPut$date[200],
daily_thruPut$date[400], daily_thruPut$date[600], daily_thruPut$date[800])
daily_tickmarks
dailty_thruPut$date[400]
dailty_thruput$date[400]
daily_thruput$date[400]
daily_thruPut$date[400]
dataConverter4thruput <- function(df){
require(lubridate)
df$test_date <- as.POSIXlt(df$test_date)
#creating monthly labels
mo_label_maker <- function(dt){
text_label <-paste(as.character(format(dt,"%m")), as.character(year(dt)))
return(text_label)
}
df$monthly_labels <- mo_label_maker(df$test_date)
#creating weekly labels
week_label_maker <- function(dt){
text_label<-paste(as.character(format(dt,"%U")),as.character(year(dt)))
return(text_label)
}
df$weekly_labels <- week_label_maker(df$test_date)
#creating daily labels
day_label_maker <- function(dt){
day_label<-paste(as.character(format(dt,"%b %d")))
return(day_label)
}
df$daily_labels <- day_label_maker(df$test_date)
#returning the resulting data frame df
return(df)
}
df <- read.csv("thruput_asn4EgyptSept2009Dec2011.csv")
names(df)
df <- dataConverter4thruput(df)
df$date <-format(as.POSIXlt(df$test_date), "%m %d %Y")
df$test_date <- as.character(df$test_date)
df$date <- as.character(df$test_date)
names(df)
by_day <- group_by(df, date)
daily_thruPut <- summarise(by_day, tests=n(), meanThruPut=mean(download_Mbps),
medianThruPut = median(download_Mbps),
varThruPut=var(download_Mbps))
head(daily_thruPut)
daily_thruPut <- arrange(daily_thruPut, date)
#adding an index column
daily_thruPut$day <- c(1:nrow(daily_thruPut))
daily_thruPut$medianKbps <- daily_thruPut$medianThruPut*1000
daily_tickmarks <- c(daily_thruPut$date[1], daily_thruPut$date[200],
daily_thruPut$date[400], daily_thruPut$date[600], daily_thruPut$date[800])
daily_tickmarks
ggplot() +
geom_line(data = daily_thruPut, aes(x = day, y = medianKbps,
color = "Median of  Throughput  in Kbps")) +
geom_line(data = daily_thruPut, aes(x = day, y = tests, color = "Tests per day"))  +
xlab('Date') +
ylab('')+
labs(title="Daily Median of Throughput in Kbps & Number of Tests per Day in Egypt")+
scale_x_continuous(labels=daily_tickmarks)
x<-daily_thruPut$medianKbps
y<-daily_thruPut$tests
ccf(x,y)
?function
?function
22/3
22//3
22%3
22 %/% 3
22 %% 3
require(LambertW)
?test_normality
str(test_normality())
x <- rnorm(n = 1000)
test_normality(x)
str(test_normality(x))
?kurtosis
kurtosis(x)
skewness(x)
shapiro.test(x)
str(shapiro.test)
str(shapiro.test(x))
source('~/Dropbox/outreachy/normality_finder_function.R', echo=TRUE)
normaility_finder(x)
normality_finder(x)
source('~/Dropbox/outreachy/normality_finder_function.R', echo=TRUE)
normality_finder(x)
?abs
abs(normality_finder(x)$skew)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
y=runif(30)
y
?runif
x <- rnorm(50)
x
?rnorm
dnorm(0)
?dnorm
require(graphics)
dnorm(0) == 1/sqrt(2*pi)
dnorm(1) == exp(-1/2)/sqrt(2*pi)
dnorm(1) == 1/sqrt(2*pi*exp(1))
pnorm(1)
plot(function(x) dnorm(x, log = TRUE), -60, 50,
main = "log { Normal density }")
curve(log(pnorm(x)), add = TRUE, col = "red", lwd = 2)
rnorm(20,2,0)
rnorm(10, mean=3.4, sd=0.001)
x<-rnorm(10, mean=4, sd=3.4)
pnorm(x)
dnorm(x, mean=4, sd=3.4)
pnorm(4, mean=4, sd=3)
setwd("~/Dropbox/outreachy/InterconnectionStudy2014/interconnection-study-2014-telescope-data-amended-2015-04-23-raw")
library(qcc)
library(dplyr)
library(moments) #contains kurtosis(), skewness()
library(LambertW) #contains test_normality()
orig_df <- read.csv("2014-01-01-000000+273d_nuq01_cablevision_download_throughput-raw.csv")
orig_df <- read.csv("2014-01-01-000000+273d_lax01_verizon_download_throughput-raw.csv")
head(orig_df)
names(orig_df)<-c("log_time", "download_thruput")
orig_df$date <-  as.POSIXlt(as.integer(orig_df$log_time),origin = "1970-01-01", tz = "GMT")
head(orig_df)
orig_df$yearMoDay <- as.character(format(orig_df$date, "%Y %m %d"))
orig_df$date<-as.character(orig_df$date)
head(orig_df)
plot(orig_df$download_thruput, type="l")
daily_df <- group_by(orig_df, yearMoDay)
daily_df_summary <- summarise(daily_df, count=n(),
median_thruput=median(download_thruput))
test_data <- daily_df_summary$median_thruput
plot(test_data,type="l", main="Download Throughput LAX 2014 Verizon", xlab="Days",
ylab="Download Throughput")
trainer <- test_data[175:272]
xbar<-mean(trainer)
sigma <- sd(trainer)
x<-rnorm(272-15)
272-175
x<-rnorm(100, mean=xbar, sd=sigma)
head(x)
ks.test(trainer, x)
shapiro.test(trainer)
x<-rnorm(100, mean=xbar, sd=sigma)
ks.test(trainer, x)
x<-rnorm(100, mean=xbar, sd=sigma)
ks.test(trainer, x)
library(qcc)
x
cusum(x,sizes=1, center=xbar, std.dev=sigma )
what<-cusum(x,sizes=1, center=xbar, std.dev=sigma )
what$violations
trainer
what<-cusum(trainer,sizes=1, center=xbar, std.dev=sigma )
what$violations
what$violations$lower
test
what<-cusum(test_data,sizes=1, center=xbar, std.dev=sigma )
what$violations$lower
what$violations$upper
length(test_data)
str(what)
attr(what)
?attr
?sd
?list
source('~/.active-rstudio-document', echo=TRUE)
d_list
source('~/.active-rstudio-document', echo=TRUE)
require("parameter_finder_function.R")
require("parameter_finder_function.R")
setwd("~/Dropbox/outreachy")
require("parameter_finder_function.R")
source('~/Dropbox/outreachy/TryingThings.R', echo=TRUE)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
logical(0)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
k
source("parameter_finder_function.R")
x<-rnorm(120, mean=4, sd=2.1)
parameter_finder(x)
str(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=5, sd=3)
x<-c(a,b)
parameter_finder(x)
source("parameter_finder_function.R")
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=5, sd=3)
x<-c(a,b)
parameter_finder(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=10, sd=3)
x<-c(a,b)
parameter_finder(x)
a<-rnorm(120, mean=4, sd=2.1)
b<-rnorm(50, mean=100, sd=30)
x<-c(a,b)
parameter_finder(x)
shapiro.test(x)
library(LambertW)
test_normality(x)
y<-parameter_finder(x)
y<-parameter_finder(x)
y$k
y$H
rep(10000000,8)
c(-1, rep(1000000,7))
source('~/Dropbox/outreachy/checker_function.R', echo=TRUE)
source('~/Dropbox/outreachy/parameter_finder_function.R', echo=TRUE)
source('~/Dropbox/outreachy/checker_function.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source("training_data_finder_function.R")
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
source("training_data_finder_function.R")
training_data_finder(x)
y<-test_normality(x)
training_data_finder(x)
training_data_finder(x)
trainer <- training_data_finder(x)
test_normality(trainer[[2]])
trainer[[1]]
test_normality(x)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer <- training_data_finder(x)
trainer[[1]]
x_bar<-mean(trainer[[2]])
library(qcc)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
source("training_data_finder_function.R")
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
str(trainer[[1]])
length(x)
170 %/% 3
65+56
170-56+1
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source('~/Dropbox/outreachy/training_data_finder_function.R', echo=TRUE)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
source("training_data_finder_function.R")
trainer <- training_data_finder(x)
trainer
x_bar<-mean(trainer[[2]])
sigma<-sd(trainer[[2]])
H<-trainer$H
k<-trainer$k
cusum(x,sizes=1, center=x_bar, std.dev=sigma,
decision.interval=H, se.shift=k)
library(qcc)
?cusum
require(LambertW)
?test_normality
load.packages("nortest")
install.packages("nortest")
y <- rt(200, df = 5)
qqnorm(y); qqline(y, col = 2)
qqplot(y, rt(300, df = 5))
qqnorm(y)
qqline(y,col=2)
?qqnorm
?acf
par()
?cusum
library(qcc)
?cusum
library(ggplot2)
?ggplot
length(c(NA,NA,NA,10))
87/2*3
setwd("~/Desktop/outreachy/myExample2")
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?uiOutput
runApp()
?letters
letters
runApp()
?div
letters[23]
runApp()
runApp()
runApp()
14/20
0.7*280
